{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserByName","userName","usersFromServer","find","userId","App","useState","errorName","setErrorName","errorTitle","setErrorTitle","visibleTodos","setVisibleTodos","values","setValues","setTodo","handleChange","e","target","value","useEffect","length","action","method","onSubmit","preventDefault","Boolean","trim","type","onChange","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fcdaed0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <li\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nfunction getUserByName(userName: string): User | null {\n  const foundUser = usersFromServer.find(user => user.name === userName);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\ntype ChangeEvent = React.ChangeEvent<HTMLSelectElement | HTMLInputElement>;\nexport const App: React.FC = () => {\n  const [errorName, setErrorName] = useState(false);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [values, setValues] = useState({\n    user: '',\n    title: '',\n    id: 16,\n    completed: false,\n  });\n  const [todo, setTodo] = useState<Todo>({\n    id: 0,\n    userId: 0,\n    title: '',\n    completed: false,\n    user: null,\n  });\n\n  const handleChange = (e: ChangeEvent) => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const { user, title } = values;\n\n    if (!user || !title) {\n      setErrorName(Boolean(!user));\n      setErrorTitle(Boolean(!title));\n\n      return;\n    }\n\n    if (user === '0') {\n      setErrorName(true);\n\n      return;\n    }\n\n    if (title.trim().length === 0) {\n      setErrorTitle(Boolean(title));\n\n      return;\n    }\n\n    setValues({\n      ...values,\n      user: '',\n      title: '',\n      id: values.id + 1,\n    });\n\n    setVisibleTodos([\n      ...visibleTodos,\n      todo,\n    ]);\n  };\n\n  useEffect(() => {\n    const user = getUserByName(values.user);\n\n    if (values.user.length > 0) {\n      setErrorName(false);\n    } else if (values.title.length > 0) {\n      setErrorTitle(false);\n    }\n\n    setTodo({\n      ...todo,\n      id: values.id,\n      userId: user !== null ? user.id : 0,\n      title: values.title,\n      completed: values.completed,\n      user: getUserByName(values.user),\n    });\n  }, [values.title, values.user]);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            value={values.title}\n            onChange={handleChange}\n            placeholder=\"Please enter a title\"\n          />\n          {errorTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={values.user}\n            onChange={handleChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorName && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}